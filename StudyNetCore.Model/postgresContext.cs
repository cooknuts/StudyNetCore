// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using StudyNetCore.Model.Models;

namespace StudyNetCore.Model
{
    public partial class postgresContext : DbContext
    {
        public postgresContext()
        {
        }

        public postgresContext(DbContextOptions<postgresContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AuthorizationGroup> AuthorizationGroups { get; set; }
        public virtual DbSet<AuthorizationPermission> AuthorizationPermissions { get; set; }
        public virtual DbSet<AuthorizationRole> AuthorizationRoles { get; set; }
        public virtual DbSet<AuthorizationUser> AuthorizationUsers { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasPostgresExtension("pg_catalog", "adminpack");

            modelBuilder.Entity<AuthorizationGroup>(entity =>
            {
                entity.HasKey(e => e.Guid)
                    .HasName("group_pkey");

                entity.ToTable("authorization_group");

                entity.Property(e => e.Guid)
                    .HasMaxLength(36)
                    .HasColumnName("guid")
                    .IsFixedLength();

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.GenerateTime).HasColumnName("generate_time");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(100)
                    .HasColumnName("group_name");

                entity.Property(e => e.ParentId)
                    .HasMaxLength(36)
                    .HasColumnName("parent_id")
                    .IsFixedLength();
            });

            modelBuilder.Entity<AuthorizationPermission>(entity =>
            {
                entity.HasKey(e => e.Guid)
                    .HasName("permission_pkey");

                entity.ToTable("authorization_permission");

                entity.Property(e => e.Guid)
                    .HasMaxLength(36)
                    .HasColumnName("guid")
                    .IsFixedLength();

                entity.Property(e => e.GenerateTime).HasColumnName("generate_time");

                entity.Property(e => e.ParentId)
                    .HasMaxLength(36)
                    .HasColumnName("parent_id")
                    .IsFixedLength();

                entity.Property(e => e.PermissionName)
                    .HasMaxLength(100)
                    .HasColumnName("permission_name");

                entity.Property(e => e.PermissionNote)
                    .HasMaxLength(100)
                    .HasColumnName("permission_note");
            });

            modelBuilder.Entity<AuthorizationRole>(entity =>
            {
                entity.HasKey(e => e.Guid)
                    .HasName("role_pkey");

                entity.ToTable("authorization_role");

                entity.Property(e => e.Guid)
                    .HasMaxLength(36)
                    .HasColumnName("guid")
                    .IsFixedLength();

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .HasColumnName("description");

                entity.Property(e => e.GenerateTime).HasColumnName("generate_time");

                entity.Property(e => e.ParentId)
                    .HasMaxLength(36)
                    .HasColumnName("parent_id")
                    .IsFixedLength();

                entity.Property(e => e.RoleName)
                    .HasMaxLength(100)
                    .HasColumnName("role_name");
            });

            modelBuilder.Entity<AuthorizationUser>(entity =>
            {
                entity.HasKey(e => e.Guid)
                    .HasName("user_pkey");

                entity.ToTable("authorization_user");

                entity.Property(e => e.Guid)
                    .HasMaxLength(36)
                    .HasColumnName("guid")
                    .IsFixedLength();

                entity.Property(e => e.GenerateTime).HasColumnName("generate_time");

                entity.Property(e => e.LastLoginTime).HasColumnName("last_login_time");

                entity.Property(e => e.LoginTime).HasColumnName("login_time");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .HasColumnName("user_name");

                entity.Property(e => e.UserPassword)
                    .HasMaxLength(250)
                    .HasColumnName("user_password");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}